    第一章
    安装 Python

本章中包含的内容：
•   下载和安装 Python 解释器
•   如何使用本书
•   本书位于http://inventwithpython.com的网站

你好！这本书将通过制作视频游戏来教会你编程。只要你弄明白本书中的游戏是如何运作的，你就可以创造你自己的游戏了。你只需要一台电脑、一个叫 Python 解释器的软件，以及这本书。Python 解释器可以从网络上免费下载。

当我还是个孩子的时候，有一本和本书类似的书教会了我写程序和游戏，而且有趣又简单。现在我长大了，我仍然从编程中获得乐趣并以之为生。但即使你长大后不会成为程序员，编程也依然是一项有用的、有趣的、值得掌握的技能。

计算机令人惊奇，而学会为它们编程序并不像人们所想的那样困难。如果你能读懂这本书，你就能为电脑编写程序。计算机程序是一组计算机能够理解的指令，就好像故事书是一组读者可以理解的句子一样。既然视频游戏也是计算机程序，它们也是由指令构成的。

要给计算机下指令，你需要用计算机能够理解的语言编写程序。本书将教给你一门名叫 Python 的编程语言，除此之外还有很多的编程语言，有 BASIC、Java、JavaScript、PHP 和 C++ 等等。

当我还小的时候，BASIC 是通常要学的第一门语言，然而自那以后，诸如 Python 的新的编程语言不断地被创造出来。Python 甚至比 BASIC 更容易学！然而它仍然是一门被专业程序员使用的严肃的语言，许多人不论在工作中还是写着玩的时候都会用 Python。

和 Xbox、PlayStation 或者 Wii 的游戏相比，你照着这本书写出的程序看起来非常简单，因为它们是用来教你编程的基础知识的，这些游戏并没有华丽的图像。它们是故意被设计得这么简单，让你能专注于学习编程。游戏不一定要复杂才有趣。

下载和安装 Python

你需要安装一个名叫 Python 解释器的软件，这个解释器能够理解你用 Python 语言写的程序。从现在起，我会把“Python 解释器软件”简称为“Python”。

注意！确保安装的是 Python 3，而不是 Python 2。本书中的程序使用 Python 3 编写，如果你尝试在 Python 2 中运行它们，你会得到一堆错误。这非常重要，我在图 1-1 中画了一只企鹅提醒你安装 Python 3，你一定不会忽略掉这条提示。

图 1-1: 一只告诉你要安装 Python 3 的怪企鹅。

在 Windows 上，下载 Python 安装程序（文件的后缀名是 .msi）然后双击运行。按照安装程序在屏幕上显示的如下指示来安装 Python：

1.   选择“为所有用户安装”然后点击“下一步”；
2.   安装到 C:\Python34 文件夹然后点击“下一步”；
3.   点击“下一步”来跳过自定义 Python 的部分。

在 Mac OS X 上，从网站上下载适合你所用的 OS X 版本的 .dmg 文件然后双击打开。按照安装程序在屏幕上显示的如下指令来安装 Python：

1.   当 DMG 包在新窗口中打开后，双击 Python.mpkg 文件。你可能需要输入管理员密码；
2.   点击“继续”跳过欢迎部分，然后点击“同意”来接受协议；
3.   选择 HD Macintosh（或者其他你的硬盘对应的名字）然后点击“安装”。

如果你运行 Ubuntu，你可以从 Ubuntu 软件中心按照以下步骤安装 Python：

1.   打开 Ubuntu 软件中心；
2.   在窗口右上角的搜索栏中输入 Python；
3.   选择 IDLE（使用 Python 3.4）或者其他最新的版本；
4.   点击“安装”。你可能需要输入管理员密码来完成安装。

运行 IDLE

IDLE 是英文 Interactive DeveLopment Environment 的缩写，意思是交互式开发环境。开发环境是用来写 Python 程序的、类似文字处理程序的软件。在不同的系统上运行 IDLE 的方法是不同的。

在 Windows 上，点击左下角的开始按钮，输入 IDLE 然后选择 IDLE (Python GUI)。

在 Mac OS X 上，打开 Finder 窗口，点击应用程序，然后点击 Python 3.4，最后点击 IDLE 图标。

在 Ubuntu 或 Linux 上，打开一个终端窗口输入“idle3”。你大概也可以点击屏幕上方的应用程序，然后选择编程中的 IDLE 3。

第一次运行 IDLE 出现的窗口是交互式终端，如图 1-2 所示。你可以在交互式终端的“>>>”提示符之后输入 Python 指令，Python 就可以执行它们。在显示完指令的结果之后，一个新的“>>>”提示符就会出现并等待你的下一条指令。

图1-2：在 Windows、OS X 和 Ubuntu Linux 上的 IDLE 交互终端

如何使用本书

本书中的大多数章节都会以该章特色程序的示例运行开始，让你看到程序运行时的样子。用户输入的内容用粗体字显示。

你应该亲自把程序代码输入到 IDLE 文件编辑器中，而不是下载或者赋值/粘贴这些程序。如果你花时间亲自编写代码，你会对编程留下更深的印象。

行号和空格

在输入本书中的源代码时，不要输入每行开头处的行号。例如，如果你再本书中看到如下代码：

9. number = random.randint(1, 20)

你不需要输入左侧的“9.”以及在它之后的空格。只需要输入：

number = random.randint(1, 20)

这些行号只是为了方便在书中指明某一行，它们并不是程序源代码的一部分。

除了行号之外，原样输入代码的内容。注意，有很多行代码开头都缩进了四或八个空格。IDLE 中的每个字符都是一样宽的，因此可以通过数上一行或下一行的字符个数来确定空格的数量。

例如，下面的代码中空格用黑色正方形 ▪ 标记出来以便让你看到：

while guesses < 10:
▪▪▪▪if number == 42:
▪▪▪▪▪▪▪▪print('Hello')

本书中的文字环绕

一些指令的长度过长，在书页的一行中无法完全显示，会延伸到下一行。当你输入这样的代码的时候，全都输入到一行，不要按回车键。根据代码左侧的行号可以判断是否出现了一条新的指令，例如，下面的代码只有两条指令：

1. print('这是第一条指令！xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxx')
2. print('这是第二条指令，而不是第三条指令。')

第一条指令延伸到了下一行，让代码看起来好像一共有三条指令。那只是因为本书的书页不够宽，第一条指令显示不完整罢了。

寻找在线帮助

本书的网站是 http://inventwithpython.com/zh-cn，你可以在网站中找到与本书相关的各种资源。书中有些链接使用了短域名 invpy.com/zh-cn。

本书的网站 http://reddit.com/r/inventwithpython 是一个询问与本书有关的编程问题的好地方。一般的 Python 问题请到 LearnProgramming 和 LearnPython 网站提问，地址分别是 http://reddit.com/r/learnprogramming 和 http://reddit.com/r/learnpython。

你还可以将你的编程问题发送给我，邮箱地址是 al@inventwithpython.com。

记住，让别人能更容易地帮助你解决编程问题，有很多好方法。阅读这些网站的常见问题（FAQ）部分了解提问的正确方式。在询问编程问题是，参考以下规则：

•   如果你输入本书中的程序但发生了错误，首先用在线纠错工具（http://invpy.com/zh-cn/diff）检查你的输入。复制你的代码并粘贴到纠错工具中，从而找出你的代码与书中代码的不同之处。
•   当你描述错误时，解释清楚你究竟要做什么。这会让帮助你的人知道你是否采用了正确的方法。
•   复制并粘贴完整的错误信息和代码。
•   搜索网络，看看别人是否已经问过（并回答过）你的问题。
•   说清楚为了解决问题你尝试了哪些方法。这能让别人知道你为了自己解决问题已经花了一番功夫。
•   礼貌提问。不要强求帮助或者要求帮助者作出快速的回答。

询问别人“为什么我的程序不能运行？”并不能为他们提供任何信息。告诉他们你想做什么、你遇到的具体问题以及你的操作系统和版本。